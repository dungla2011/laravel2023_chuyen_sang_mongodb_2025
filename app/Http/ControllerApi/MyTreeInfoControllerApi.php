<?php

namespace App\Http\ControllerApi;

use App\Components\clsParamRequestEx;
use App\Models\GiaPha;
use App\Models\GiaPhaUser;
use App\Repositories\MyTreeInfoRepositoryInterface;
use Illuminate\Http\Request;

class MyTreeInfoControllerApi extends BaseApiController
{
    public function __construct(MyTreeInfoRepositoryInterface $data, clsParamRequestEx $objPrEx)
    {
        $this->data = $data;
        $this->objParamEx = $objPrEx;
    }

    function changeVersion()
    {
        $uid = getCurrentUserId();

        if(!$uid)
            return rtJsonApiError('Not found user_id!');

        $ver = \request('version_using');
        if($ver != 1 && $ver != 2 ){
            return rtJsonApiError('Version not support!');
        }

        if($obj = GiaPhaUser::where("user_id", getCurrentUserId())->first()){
            $obj->version_using = $ver;
            $obj->save();
        }

        return rtJsonApiDone('Đã chuyển sang phiên bản: ' . $ver);

    }
    public function add(Request $request)
    {
        if ($request->tree_id && ! is_numeric($request->tree_id)) {
            $request['tree_id'] = qqgetIdFromRand_($request->tree_id);
        }

        if (! GiaPha::find($request['tree_id'])) {
            return rtJsonApiError('Add Not found tree_id item!');
        }

        return parent::add($request); // TODO: Change the autogenerated stub
    }

    public function update($id, Request $request)
    {

        if(isIPDebug()){

        }

        if ($request->tree_id && ! is_numeric($request->tree_id)) {
            $request['tree_id'] = qqgetIdFromRand_($request->tree_id);
        }
        if ($request->tree_id && ! GiaPha::find($request['tree_id'])) {
            return rtJsonApiError('Update Not found item tree_id!');
        }

        return parent::update($id, $request); // TODO: Change the autogenerated stub
    }
}
