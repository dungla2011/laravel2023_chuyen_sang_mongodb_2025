<?php

namespace App\Models;

use App\Components\Helper1;
use LadLib\Common\Database\MetaOfTableInDb;

/**
 * ABC123
 *
 * @param  null  $objData
 */
class MyDocument_Meta extends MetaOfTableInDb
{
    protected static $api_url_admin = '/api/my-document';

    protected static $web_url_admin = '/admin/my-document';

    protected static $api_url_member = '/api/member-my-document';

    protected static $web_url_member = '/member/my-document';

    public static $folderParentClass = MyDocumentCat::class;

    public static $modelClass = MyDocument::class;

    public static $allowAdminShowTree = 1;

    /**
     * @return MetaOfTableInDb
     */
    public function getHardCodeMetaObj($field)
    {
        $objMeta = new MetaOfTableInDb();

        //Riêng Data type của Field, Lấy ra các field datatype mặc định
        //Nếu có thay đổi sẽ SET bên dưới
        //        $objSetDefault = new MetaOfTableInDb();
        //        $objSetDefault->setDefaultMetaTypeField($field);
        //        $objMeta->dataType = $objSetDefault->dataType;

        if ($field == 'parent_extra' || $field == 'parent_all') {
            $objMeta->dataType = DEF_DATA_TYPE_TREE_MULTI_SELECT;
            $objMeta->join_api = '/api/my-document-cat';
            //            $objMeta->join_func = 'App\Models\DemoFolderTbl::joinFuncPathNameFullTree';
        }

        if ($field == 'parent_id') {
            $objMeta->dataType = DEF_DATA_TYPE_TREE_SELECT;
            $objMeta->join_api = '/api/my-document-cat';
            //            $objMeta->join_func = 'App\Models\DemoFolderTbl::joinFuncPathNameFullTree';
        }


        if ($field == 'publish_status') {
            $objMeta->dataType = DEF_DATA_TYPE_HTML_SELECT_OPTION;
        }

        if ($field == 'image_list' || $field == 'file_list') {
            $objMeta->dataType = DEF_DATA_TYPE_IS_MULTI_IMAGE_BROWSE;
        }

        if ($field == 'content') {
            $objMeta->dataType = DEF_DATA_TYPE_RICH_TEXT;
        }

        if ($field == 'summary') {
            $objMeta->dataType = DEF_DATA_TYPE_TEXT_AREA;
        }
        if ($field == 'status') {
            $objMeta->dataType = DEF_DATA_TYPE_STATUS;
        }

        return $objMeta;

    }


    function preZoneFieldEdit($field, $obj = null)
    {
        if(!isSupperAdmin_())
            return;

//        if($field == 'id')
//            return "Cộng hoà xã hội... chủ n ghĩa việt nam            ";
//        if($field == 'name')
//                return "Cộng hoà xã hội... chủ n ghĩa việt nam            ";
//
//        if($field == 'parent_extra'){
//            return "Cộng hoà xã hội... chủ n ghĩa việt nam           2 ";
//        }
    }

    public function extraHtmlIncludeEdit0()
    {
        ?>

        <div class="row mb-3">
            <div class="col-sm-2">
                <button type="button" id="sinh_image_thumb" class="btn btn-sm btn-primary"> Sinh Ảnh từ file PDF </button>
            </div>
        </div>


        <script>
            window.addEventListener('load', function (){
                console.log("Load ...");

                $("#sinh_image_thumb").click(function (){
                    var url = '/api/my-document/genImageThumb?id=<?php echo request('id') ?>'
                    $.get(url, function (data){
                        console.log(data);
                        alert(data);
                    });
                });
            })


        </script>

<?php
    }

    public function _image_list($obj, $val, $field)
    {
        return Helper1::imageShow1($obj, $val, $field);

    }

    public function _file_list($obj, $val, $field)
    {
        return Helper1::imageShow1($obj, $val, $field);
    }

    public function _parent_extra($obj, $valIntOrStringInt, $field)
    {
        return parent::_parent_id_template($obj, $valIntOrStringInt, $field); // TODO: Change the autogenerated stub

        /*
//return " $val , $obj->id , $obj->parent ";

//        if($field == 'parent_multi' || $field == 'parent_multi2')

        if (!$valIntOrStringInt)
            return null;

        $cls = get_called_class();

        $objFolder = new MyDocumentCat();

        if ($objFolder instanceof MyDocumentCat) ;
        $ret = '';
        $retApi = [];
        //if(strstr($valIntOrStringInt, ','))
        if ($valIntOrStringInt) {
            $valIntOrStringInt = trim(trim($valIntOrStringInt, ','));
            $mVal = explode(",", $valIntOrStringInt);


            if ($mm = $objFolder->whereIn("id", $mVal)->get()) {
                foreach ($mm as $obj) {
                    $mName = $obj->getFullPathParentObj(2);
                    $retApi[$obj->id] = $obj->name;
                    $retApi[$obj->id] = $name0 = implode("/", $mName);;
                    $ret .= "<span class='one_node_name' title='remove this: $obj->id' data-id='$obj->id' data-field='$field'> [x] $name0</span>";
                }
            }

        }

        if (Helper1::isApiCurrentRequest())
            return $retApi;
//        else
//            return "xxxxxx <span title='' class='all_node_name' data-field='$field'>$ret </span>";

        return $ret;
        */
    }

    public function _parent_id($obj, $valIntOrStringInt, $field)
    {
        //return " $val , $obj->id , $obj->parent ";
        return parent::_parent_id_template($obj, $valIntOrStringInt, $field); // TODO: Change the autogenerated stub

        //        if($field == 'parent_multi' || $field == 'parent_multi2')

        /*
        if (!$valIntOrStringInt)
            return null;

        $cls = get_called_class();

        $objFolder = new MyDocumentCat();

        if ($objFolder instanceof MyDocumentCat) ;
        $ret = '';
        $retApi = [];
        //if(strstr($valIntOrStringInt, ','))
        if ($valIntOrStringInt) {
            $valIntOrStringInt = trim(trim($valIntOrStringInt, ','));
            $mVal = explode(",", $valIntOrStringInt);


            if ($mm = $objFolder->whereIn("id", $mVal)->get()) {
                foreach ($mm as $obj) {
                    $mName = $obj->getFullPathParentObj(2);
                    $retApi[$obj->id] = $obj->name;
                    $retApi[$obj->id] = $name0 = implode("/", $mName);;
                    $ret .= "<span class='one_node_name' title='remove this: $obj->id' data-id='$obj->id' data-field='$field'> [x] $name0</span>";
                }
            }

        }

        if (Helper1::isApiCurrentRequest())
            return $retApi;
//        else
//            return "xxxxxx <span title='' class='all_node_name' data-field='$field'>$ret </span>";

        return $ret;
        */
    }

    //...
}
