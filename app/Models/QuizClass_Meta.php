<?php

namespace App\Models;

use App\Components\Helper1;
use LadLib\Common\Database\MetaOfTableInDb;

/**
 * ABC123
 *
 * @param  null  $objData
 */
class QuizClass_Meta extends MetaOfTableInDb
{
    protected static $api_url_admin = '/api/quiz-class';

    protected static $web_url_admin = '/admin/quiz-class';

    protected static $api_url_member = '/api/member-quiz-class';

    protected static $web_url_member = '/member/quiz-class';

    public static $folderParentClass = QuizClass::class;

    public static $modelClass = QuizClass::class;

    /**
     * @return MetaOfTableInDb
     */
    public function getHardCodeMetaObj($field)
    {
        $objMeta = new MetaOfTableInDb();

        //Riêng Data type của Field, Lấy ra các field datatype mặc định
        //Nếu có thay đổi sẽ SET bên dưới
        $objSetDefault = new MetaOfTableInDb();
        $objSetDefault->setDefaultMetaTypeField($field);
        $objMeta->dataType = $objSetDefault->dataType;

        if ($field == 'parent_id') {
            $objMeta->dataType = DEF_DATA_TYPE_TREE_SELECT;
            $objMeta->join_api = '/api/quiz-class';
            //            $objMeta->join_func = 'App\Models\DemoFolderTbl::joinFuncPathNameFullTree';
        }
        if ($field == 'image_list') {
            $objMeta->dataType = DEF_DATA_TYPE_IS_MULTI_IMAGE_BROWSE;
        }

        return $objMeta;
    }

    public function _parent_id($obj, $valIntOrStringInt, $field)
    {
        //return " $val , $obj->id , $obj->parent ";

        return parent::_parent_id_template($obj, $valIntOrStringInt, $field); // TODO: Change the autogenerated stub
        /*
        //        if($field == 'parent_multi' || $field == 'parent_multi2')

                if(!$valIntOrStringInt)
                    return null;

                $cls = get_called_class();

                $folderCls = static::$folderParentClass;
                $objFolder = new $folderCls;

        //        if($objFolder instanceof DemoFolderTbl);

                $ret = '';
                $retApi = [];
                //if(strstr($valIntOrStringInt, ','))
                if($valIntOrStringInt)
                {
                    $valIntOrStringInt = trim(trim($valIntOrStringInt,','));
                    $mVal = explode(",", $valIntOrStringInt);


                    if($mm = $objFolder->whereIn("id", $mVal)->get()){
                        foreach ($mm AS $obj) {
                            $mName = $obj->getFullPathParentObj(2);
                            $retApi[$obj->id] = $obj->name;
                            $retApi[$obj->id] = $name0 = implode("/", $mName);;
                            $ret .= "<span class='one_node_name' title='remove this: $obj->id' data-id='$obj->id' data-field='$field'> [x] $name0</span>";
                        }
                    }

                }

                if(Helper1::isApiCurrentRequest())
                    return $retApi;
        //        else
        //            return "xxxxxx <span title='' class='all_node_name' data-field='$field'>$ret </span>";

                return $ret;
        */
    }

    //...
}
